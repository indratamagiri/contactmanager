{"version":3,"sources":["context.js","components/Contact/Contact.js","components/Contact/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/Contact/addContact.js","components/Contact/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","components_Contact_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classname","is-invalid","propType","PropType","string","isRequired","addContact","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","AddContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54642091.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT': \r\n        return {\r\n            ...state,\r\n            contacts: state.contacts.filter(contact =>\r\n                contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT': \r\n        return {\r\n            ...state,\r\n           contacts: [action.payload, ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? \r\n                    (contact = action.payload) : contact)\r\n            }\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => \r\n            this.setState(state => \r\n                reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n \r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = () =>  {\r\n    this.setState({ showContactInfo: \r\n      !this.state.showContactInfo })\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    } catch(e) {\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }  \r\n  };\r\n\r\n\r\n  render() {\r\n    const {id ,name, email, phone} = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name} <i onClick={this.onShowClick}\r\n              className=\"fas fa-sort-down\"\r\n              style={{ cursor: 'pointer'}}/>\r\n              <i className=\"fas fa-times\"\r\n              style= {{cursor: 'pointer', float: 'right',\r\n              color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}>\r\n              </i>\r\n              <Link to={`contact/edit/${id}`}>\r\n              <i className=\"fas fa-pencil-alt\"\r\n                  style={{\r\n                    cursor: 'pointer', float:'right',\r\n                    color: 'black',\r\n                    marginRight: '1rem'\r\n                  }}></i>\r\n              </Link>\r\n              </h4>\r\n              {showContactInfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email : {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n              </ul>) : null }\r\n            </div>\r\n          ) \r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from \"../../context\";\r\n\r\n class Contacts extends Component {\r\n  render() {\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { contacts } = value;\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                        <span className=\"text-danger\">Contact </span>List</h1>\r\n                        { contacts.map(contact => (\r\n                          <Contact\r\n                          key={contact.id}\r\n                            contact={contact}\r\n                            />\r\n                        ))}\r\n                    </React.Fragment>\r\n                  )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                {branding}</a>\r\n\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                            <i className=\"fas fa-home\"/> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                            <i className=\"fas fa-plus\"/> Add</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                            <i className=\"fas fa-question\"/> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contact</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport classname from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={label}>{label}</label>\r\n        <input type={type} name={name}\r\n        className={classname('form-control form-control-lg', {\r\n            'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propType = {\r\n    name: PropType.string.isRequired,\r\n    placeholder: PropType.string.isRequired,\r\n    value: PropType.string.isRequired,\r\n    label: PropType.string.isRequired,\r\n    type: PropType.string.isRequired,\r\n    onChange: PropType.string.isRequired,\r\n    error: PropType.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\n// import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass addContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        error: {\r\n\r\n        }\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value})\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check Error\r\n\r\n        if (name === '') {\r\n            this.setState({error: { name: 'Name is required'}})\r\n            return;\r\n        }\r\n        else if (email === '') {\r\n            this.setState({error: { email: 'Email is required'}})\r\n            return;\r\n        }\r\n        else if (phone === '') {\r\n            this.setState({error: { phone: 'Phone is required'}})\r\n            return;\r\n        }else {\r\n        const newContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n  render() {\r\n    const { name, email, phone, error} = this.state;\r\n    \r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                               <TextInputGroup \r\n                                label=\"Name\" name=\"name\" \r\n                                placeholder=\"Enter Name\" value={name}\r\n                                onChange={this.onChange}\r\n                                error={error.name}\r\n                               ></TextInputGroup>\r\n\r\n                                <TextInputGroup \r\n                                label=\"Email\" name=\"email\" type=\"email\" \r\n                                placeholder=\"Enter Email\" value={email}\r\n                                onChange={this.onChange}\r\n                                error={error.email}\r\n                               ></TextInputGroup>\r\n\r\n                               <TextInputGroup \r\n                                label=\"Phone\" name=\"phone\" \r\n                                placeholder=\"Enter Phone\" value={phone}\r\n                                onChange={this.onChange}\r\n                                error={error.phone}\r\n                               ></TextInputGroup>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-light btn-block\"\r\n                                value=\"Add Contact\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n\r\n        </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default addContact;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\n// import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        error: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value})\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check Error\r\n\r\n        if (name === '') {\r\n            this.setState({error: { name: 'Name is required'}})\r\n            return;\r\n        }\r\n        else if (email === '') {\r\n            this.setState({error: { email: 'Email is required'}})\r\n            return;\r\n        }\r\n        else if (phone === '') {\r\n            this.setState({error: { phone: 'Phone is required'}})\r\n            return;\r\n        }else {\r\n\r\n            const updateContact = {\r\n                name,\r\n                email,\r\n                phone\r\n            }\r\n\r\n            const { id } = this.props.match.params;\r\n\r\n            const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n            dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            error: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n  render() {\r\n    const { name, email, phone, error} = this.state;\r\n    \r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                               <TextInputGroup \r\n                                label=\"Name\" name=\"name\" \r\n                                placeholder=\"Enter Name\" value={name}\r\n                                onChange={this.onChange}\r\n                                error={error.name}\r\n                               ></TextInputGroup>\r\n\r\n                                <TextInputGroup \r\n                                label=\"Email\" name=\"email\" type=\"email\" \r\n                                placeholder=\"Enter Email\" value={email}\r\n                                onChange={this.onChange}\r\n                                error={error.email}\r\n                               ></TextInputGroup>\r\n\r\n                               <TextInputGroup \r\n                                label=\"Phone\" name=\"phone\" \r\n                                placeholder=\"Enter Phone\" value={phone}\r\n                                onChange={this.onChange}\r\n                                error={error.phone}\r\n                               ></TextInputGroup>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-light btn-block\"\r\n                                value=\"Update Contact\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n\r\n        </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page not found</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/Contact/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/Contact/addContact';\nimport EditContact from './components/Contact/EditContact';\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component= {AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component= {EditContact} />\n              <Route exact path=\"/about\" component= {About}/>\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}